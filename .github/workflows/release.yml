name: Release

on:
  push:
    tags:
      - "v*"

env:
  NODE_VERSION: "18"

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Run tests
        run: npm run test:ci

      - name: Generate changelog
        id: changelog
        run: |
          # Extract version from tag
          VERSION=${GITHUB_REF#refs/tags/}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

          # Generate changelog (you can customize this)
          echo "## What's Changed" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "### Features" >> CHANGELOG.md
          echo "- Item management with add/remove functionality" >> CHANGELOG.md
          echo "- LocalStorage persistence" >> CHANGELOG.md
          echo "- Responsive design with Tailwind CSS" >> CHANGELOG.md
          echo "- Comprehensive testing with Vitest" >> CHANGELOG.md
          echo "- FSD architecture implementation" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "### Technical Improvements" >> CHANGELOG.md
          echo "- TypeScript strict mode" >> CHANGELOG.md
          echo "- ESLint and Prettier configuration" >> CHANGELOG.md
          echo "- GitHub Actions CI/CD pipeline" >> CHANGELOG.md
          echo "- Performance optimizations with React.memo" >> CHANGELOG.md

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.changelog.outputs.version }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false

      - name: Upload build artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist
          asset_name: item-manager-${{ steps.changelog.outputs.version }}.zip
          asset_content_type: application/zip
